{"version":3,"sources":["/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/tiles-display-wall/tile-row/tile-row.component.css","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/tiles-display-wall/tile-row/tile-row.component.html","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/tiles-display-wall/tile-row/tile-row.component.ts","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/tiles-display-wall/tiles-display-wall.component.css","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/tiles-display-wall/tiles-display-wall.component.html","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/tiles-display-wall/tiles-display-wall.component.ts","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/tiles-display-wall/tiles-display-wall.module.ts","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/tiles-display-wall/tiles-display-wall.routing.module.ts","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/tiles-display-wall/tiles-panel/tiles-panel.component.css","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/tiles-display-wall/tiles-panel/tiles-panel.component.html","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/tiles-display-wall/tiles-panel/tiles-panel.component.ts"],"names":[],"mappings":"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","file":"tiles-display-wall.module.chunk.js","sourcesContent":["exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".bd-border-utils [class^=border] {\\n    display: inline-block;\\n    width: 5rem;\\n    height: 5rem;\\n    margin: 0rem;\\n    background-color: #f5f5f5;\\n    outline: .1px solid gray;\\n    line-height: 0;\\n}\\n\\n.bd-bg-colour-utils [class^=border] {\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/tiles-display-wall/tile-row/tile-row.component.css\n// module id = ../../../../../src/app/tools/tiles-display-wall/tile-row/tile-row.component.css\n// module chunks = tiles-display-wall.module","module.exports = \"<div class=\\\"bd-border-utils clearfix \\\">\\n  <div class=\\\"pull-left\\\">\\n    <button type=\\\"button\\\"\\n      class=\\\"btn btn-default btn-sm\\\"\\n      (click)=\\\"toggleCell()\\\">\\n      a\\n    </button>\\n\\n    <button type=\\\"button\\\"\\n      class=\\\"btn btn-default btn-sm\\\"\\n      (click)=\\\"fillRow($event)\\\">\\n      f\\n    </button>\\n  </div>\\n\\n  <span style=\\\"cursor: pointer;\\\"\\n    class=\\\"border clearfix\\\"\\n    [ngStyle]=\\\"{'width': width +'px', 'height': height +'px'}\\\"\\n    *ngFor=\\\"let col of colCount | numToArray\\\"\\n     appDisplaySelectedTile>\\n      <img\\n      [src]=\\\"tilesFolderPath + imageAddress\\\"\\n      alt=\\\"\\\"\\n      class=\\\"img-responsive\\\"\\n      [ngStyle]=\\\"{'max-width': widthp +'px', 'max-height': heightp +'px' }\\\">\\n    \\n  </span>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/tiles-display-wall/tile-row/tile-row.component.html\n// module id = ../../../../../src/app/tools/tiles-display-wall/tile-row/tile-row.component.html\n// module chunks = tiles-display-wall.module","import { Component, OnInit, Input, Renderer2 } from '@angular/core';\nimport { TileSizeService } from '../../services/tile-size.service';\nimport { TileSelectService } from '../../services/tile-select.service';\n\n@Component({\n  selector: 'app-tile-row',\n  templateUrl: './tile-row.component.html',\n  styleUrls: ['./tile-row.component.css']\n})\nexport class TileRowComponent implements OnInit {\n\n  @Input() originalWidth: number;\n  @Input() originalHeight: number;\n  @Input() imageAddress: string;\n  tilesFolderPath = '';\n  width: number;\n  height: number;\n  colCount: number;\n  isToggled = false;\n  widthp: number ;\n  heightp: number;\n\n\n  constructor(private tileSizeService: TileSizeService,\n              private tileService: TileSelectService,\n              private renderer: Renderer2) { }\n\n  ngOnInit() {\n    this.colCount = this.tileSizeService.getColumnCount(this.originalWidth);\n    this.width = this.tileSizeService.getRowWidth(this.originalWidth);\n    this.height = this.tileSizeService.getRowHeight(this.originalHeight);\n    this.tilesFolderPath = this.tileService.tilesFolderPath;\n  }\n\n  toggleCell() {\n    this.isToggled = !this.isToggled;\n    const tempSize = this.width;\n    this.width = this.height;\n    this.height = tempSize;\n    if (this.isToggled) {\n      this.colCount = this.tileSizeService.getColumnCount(this.originalHeight);\n      this.widthp = this.height;\n      this.heightp = this.width;\n    } else {\n      this.colCount = this.tileSizeService.getColumnCount(this.originalWidth);\n      this.widthp = this.width;\n      this.heightp = this.height;\n    }\n  }\n\n  fillRow(event: Event) {\n    const tilesInRow: NodeListOf<HTMLImageElement> = (<HTMLElement>this.renderer\n                            .parentNode(this.renderer.parentNode(event.srcElement))).querySelectorAll('img');\n\n    for (let   i = 0; i < tilesInRow.length; i++) {\n      tilesInRow[i].click();\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/tiles-display-wall/tile-row/tile-row.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/tiles-display-wall/tiles-display-wall.component.css\n// module id = ../../../../../src/app/tools/tiles-display-wall/tiles-display-wall.component.css\n// module chunks = tiles-display-wall.module","module.exports = \"\\n<div class=\\\"container col-sm-9\\\">\\n  <div class=\\\"row\\\">\\n    <form [formGroup] = \\\"wallSizeForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n      <div class=\\\"row\\\">\\n\\n        <div class=\\\"form-group  col-sm-3\\\">\\n          <label for=\\\"wallWidth\\\">Wall Width (ft)</label>\\n            <select class=\\\"form-control\\\"\\n              name=\\\"wallWidth\\\"\\n              id=\\\"wallWidth\\\"\\n              formControlName=\\\"wallWidth\\\">\\n              <option\\n                *ngFor=\\\"let num of 10 | numToArray\\\"\\n                [value]= \\\"num + 1\\\" >{{num + 1}}</option>\\n            </select>\\n        </div>\\n\\n        <div class=\\\"form-group  col-sm-3\\\">\\n          <label for=\\\"wallHeight\\\">Wall Height (ft)</label>\\n            <select class=\\\"form-control\\\"\\n              name=\\\"wallHeight\\\"\\n              id=\\\"wallHeight\\\"\\n              formControlName=\\\"wallHeight\\\">\\n              <option\\n                *ngFor=\\\"let num of 10 | numToArray\\\"\\n                [value]= \\\"num + 1\\\" >{{num + 1}}</option>\\n            </select>\\n        </div>\\n        <div class=\\\"form-group  col-sm-2\\\">\\n          <label for=\\\"wallFormbtn\\\">Action</label>\\n            <input class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Update Wall Size\\\">\\n        </div>\\n      </div>\\n    </form>\\n    <hr>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div\\n      style=\\\"width: 700px; height: 650px; background-color:#f5f5f5;\\\"\\n      >\\n        <div class=\\\"row w-100\\\" style=\\\"line-height: 0;\\\"\\n          *ngFor=\\\"let row of rowCount | numToArray\\\"\\n           >\\n          <app-tile-row\\n            [originalWidth] = \\\"originalWidth\\\"\\n            [originalHeight] = \\\"originalHeight\\\"\\n            [imageAddress] = \\\"imageAddress\\\"\\n            ></app-tile-row>\\n\\n        </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"container col-sm-3\\\">\\n  <div class=\\\"row px-2\\\">\\n    <app-tiles-panel\\n      *ngFor=\\\"let tile of tiles\\\"\\n      [tile] = \\\"tile\\\"></app-tiles-panel>\\n  </div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/tiles-display-wall/tiles-display-wall.component.html\n// module id = ../../../../../src/app/tools/tiles-display-wall/tiles-display-wall.component.html\n// module chunks = tiles-display-wall.module","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, Params, Router} from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nimport { TileSizeService } from '../services/tile-size.service';\nimport { TileSelectService } from '../services/tile-select.service';\nimport { Tile } from '../shared/tile.model';\n\n@Component({\n  selector: 'app-tiles-display-wall',\n  templateUrl: './tiles-display-wall.component.html',\n  styleUrls: ['./tiles-display-wall.component.css']\n})\nexport class TilesDisplayWallComponent implements OnInit {\n\n  originalWidth: number;\n  originalHeight: number;\n  rowCount: number;\n  colCount: number;\n  imageAddress: string;\n  tiles: Tile[];\n\n  wallSizeForm: FormGroup;\n\n\n\n  constructor(private route: ActivatedRoute,\n      private router: Router,\n      private tileService: TileSelectService,\n      private tileSizeService: TileSizeService) {\n                // override the route reuse strategy to reload the component on every time when parameter change.\n                // Used this to to recreate html template on every load\n                  this.router.routeReuseStrategy.shouldReuseRoute = function() {\n                      return false;\n                  };\n                  this.router.onSameUrlNavigation = 'reload';\n               }\n\n  ngOnInit() {\n\n    this.inItWallSizeForm();\n    this.tiles = this.tileService.getAvailableTiles();\n    this.getParams();\n\n  }\n\n  inItWallSizeForm() {\n    const wallSize = this.tileSizeService.getWallSize();\n    const wallWidth = wallSize.wallWidth / 60;\n    const wallHeight = wallSize.wallHeight / 60;\n\n    this.wallSizeForm = new FormGroup({\n      'wallWidth': new FormControl(wallWidth, Validators.required),\n      'wallHeight': new FormControl(wallHeight, Validators.required),\n    });\n  }\n\n  getParams() {\n    this.route.params.subscribe((params: Params) => {\n      // get the original tile size\n      this.originalWidth = +params['width'];\n      this.originalHeight = +params['height'];\n\n      // get the number of row and column count\n      this.rowCount = this.tileSizeService.getRowCount(this.originalHeight);\n\n      // get the tiles list based on size\n      this.tiles = this.tileService.getTilesBySize(this.originalWidth, this.originalHeight);\n\n      const selectedTilesFromStock: Tile = this.tileService.getSelectedTile();\n      if (selectedTilesFromStock) {\n        this.setDefaultTilesOnWall();\n      }\n    });\n  }\n\n  setDefaultTilesOnWall() {\n    this.imageAddress =  this.tileService.getSelectedTile().path;\n  }\n\n  onSubmit() {\n    this.tileSizeService.setWallSize(this.wallSizeForm.value.wallWidth, this.wallSizeForm.value.wallHeight);\n\n    this.tileService.setSelectedTile(null);\n    this.router.navigate(['./'], {relativeTo: this.route});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/tiles-display-wall/tiles-display-wall.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { TilesDisplayWallComponent } from './tiles-display-wall.component';\nimport { TileRowComponent } from './tile-row/tile-row.component';\nimport { TilesPanelComponent } from './tiles-panel/tiles-panel.component';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { TilesDisplayWallRoutingModule } from './tiles-display-wall.routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    ReactiveFormsModule,\n    TilesDisplayWallRoutingModule\n  ],\n  declarations: [\n    TilesDisplayWallComponent,\n    TilesPanelComponent,\n    TileRowComponent,\n  ],\n  providers: []\n})\nexport class TilesDisplayWallModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/tiles-display-wall/tiles-display-wall.module.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule} from '@angular/router';\n\nimport { TilesDisplayWallComponent } from './tiles-display-wall.component';\n\nconst tilesDisplayWallRoute: Routes = [\n  { path: '', component: TilesDisplayWallComponent, pathMatch: 'full'  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(tilesDisplayWallRoute)\n  ],\n  declarations: [],\n  providers: [],\n  exports: [ RouterModule ]\n})\n\n\n\nexport class TilesDisplayWallRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/tiles-display-wall/tiles-display-wall.routing.module.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/tiles-display-wall/tiles-panel/tiles-panel.component.css\n// module id = ../../../../../src/app/tools/tiles-display-wall/tiles-panel/tiles-panel.component.css\n// module chunks = tiles-display-wall.module","module.exports = \"\\n  <a\\n    style=\\\"cursor: pointer;\\\"\\n    class=\\\"list-group-item clearfix\\\">\\n      <div\\n        class=\\\"pull-left\\\"\\n        (click)=\\\"setSelectedTile('')\\\">\\n        <h4 class=\\\"list-group-item-heading\\\">{{ tile.name }}</h4>\\n        <p class=\\\"list-group-item-text\\\">{{ 'Size: ' + tile.width +' X '+ tile.height }}</p>\\n      </div>\\n      <span\\n        class=\\\"pull-right\\\"\\n        (click)=\\\"setSelectedTile('0deg')\\\">\\n        <img\\n          [src]=\\\"tilesFolderPath + tile.path\\\"\\n          alt=\\\"{{ tile.name }}\\\"\\n          class=\\\"img-responsive\\\"\\n          style=\\\"max-height: 50px;\\\">\\n      </span>\\n\\n      <span class=\\\"list-group-item-text\\\">\\n        <p class=\\\"pull-left\\\">Availability:&nbsp;&nbsp; </p>\\n        <p class=\\\"pull-left label-success img-circle\\\"\\n          *ngIf=\\\"tile.availability === 'Yes'\\\"\\n          style=\\\"width:15px; height:15px;\\\"></p>\\n        <p class=\\\"pull-left label-danger img-circle\\\"\\n          *ngIf=\\\"tile.availability != 'Yes'\\\"\\n          style=\\\"width:15px; height:15px;\\\"></p>\\n      </span>\\n\\n      <span class=\\\"float-none col-xs-12\\\" style=\\\"max-height: 120px;\\\">\\n        <hr>\\n        <img\\n          [src]=\\\"tilesFolderPath + tile.path\\\"\\n          alt=\\\"{{ tile.name }}\\\"\\n          class=\\\"img-responsive col-xs-4 rotate-tile-90\\\"\\n          style=\\\"max-height: 50px; max-width: 50px;\\\"\\n          (click)=\\\"setSelectedTile('90deg')\\\">\\n          <img\\n            [src]=\\\"tilesFolderPath + tile.path\\\"\\n            alt=\\\"{{ tile.name }}\\\"\\n            class=\\\"img-responsive col-xs-4 rotate-tile-180\\\"\\n            style=\\\"max-height: 50px; max-width: 50px;\\\"\\n            (click)=\\\"setSelectedTile('180deg')\\\">\\n          <img\\n            [src]=\\\"tilesFolderPath + tile.path\\\"\\n            alt=\\\"{{ tile.name }}\\\"\\n            class=\\\"img-responsive col-xs-4 rotate-tile-270\\\"\\n            style=\\\"max-height: 50px; max-width: 50px;\\\"\\n            (click)=\\\"setSelectedTile('270deg')\\\">\\n\\n      </span>\\n\\n  </a>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/tiles-display-wall/tiles-panel/tiles-panel.component.html\n// module id = ../../../../../src/app/tools/tiles-display-wall/tiles-panel/tiles-panel.component.html\n// module chunks = tiles-display-wall.module","import { Component, OnInit, Input } from '@angular/core';\nimport { TileSelectService } from '../../services/tile-select.service';\nimport { Tile } from '../../shared/tile.model';\n\n@Component({\n  selector: 'app-tiles-panel',\n  templateUrl: './tiles-panel.component.html',\n  styleUrls: ['./tiles-panel.component.css']\n})\nexport class TilesPanelComponent implements OnInit {\n\n  @Input() tile: Tile;\n  tilesFolderPath = '';\n\n  constructor(private tileService: TileSelectService) { }\n\n  ngOnInit() {\n    this.tilesFolderPath = this.tileService.tilesFolderPath;\n  }\n\n  setSelectedTile(classRotate: string) {\n    this.tileService.setSelectedTile(this.tile, classRotate);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/tiles-display-wall/tiles-panel/tiles-panel.component.ts"],"sourceRoot":"webpack:///"}