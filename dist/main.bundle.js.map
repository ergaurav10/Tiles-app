{"version":3,"sources":["/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/$_lazy_route_resource lazy","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/app.component.css","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/app.component.html","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/app.component.ts","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/app.module.ts","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/app.routing.module.ts","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/auth/auth-guard.service.ts","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/auth/auth.service.ts","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/core/core.module.ts","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/core/header/header.component.css","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/core/header/header.component.html","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/core/header/header.component.ts","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/core/home/home.component.css","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/core/home/home.component.html","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/core/home/home.component.ts","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/edit-tile/edit-tile.component.css","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/edit-tile/edit-tile.component.html","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/edit-tile/edit-tile.component.ts","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/services/data-storage.service.ts","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/services/tile-select.service.ts","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/services/tile-size.service.ts","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/shared/display-selected-tile.directive.ts","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/shared/num-to-array.pipe.ts","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/shared/shared.module.ts","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/shared/tile-size.model.ts","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/shared/tile.model.ts","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/environments/environment.ts","/Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["var map = {\n\t\"../tiles-display-wall/tiles-display-wall.module\": [\n\t\t\"../../../../../src/app/tools/tiles-display-wall/tiles-display-wall.module.ts\",\n\t\t\"tiles-display-wall.module\"\n\t],\n\t\"../tiles-stock/tiles-stock.module\": [\n\t\t\"../../../../../src/app/tools/tiles-stock/tiles-stock.module.ts\",\n\t\t\"tiles-stock.module\"\n\t],\n\t\"./auth/auth.module\": [\n\t\t\"../../../../../src/app/auth/auth.module.ts\",\n\t\t\"auth.module\"\n\t],\n\t\"./tools/tile-size/tile-size.module\": [\n\t\t\"../../../../../src/app/tools/tile-size/tile-size.module.ts\",\n\t\t\"tile-size.module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12\\\">\\r\\n      <app-header></app-header>\\r\\n    </div>\\r\\n    <hr>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FileSelectDirective, FileDropDirective } from 'ng2-file-upload';\nimport { AppRoutingModule } from './app.routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { EditTileComponent } from './edit-tile/edit-tile.component';\nimport { AuthGuard } from './auth/auth-guard.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EditTileComponent,\n    FileSelectDirective,\n    FileDropDirective,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CoreModule,\n    AppRoutingModule,\n  ],\n  providers: [\n    AuthGuard,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/app.module.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\nimport { TileSizeModule } from './tools/tile-size/tile-size.module';\nimport { AuthModule } from './auth/auth.module';\nimport { HomeComponent } from './core/home/home.component';\nimport { EditTileComponent } from './edit-tile/edit-tile.component';\nimport { SigninComponent } from './auth/signin/signin.component';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { AuthGuard } from './auth/auth-guard.service';\n\nconst appRoutes: Routes = [\n    { path: '', component: HomeComponent, pathMatch: 'full' },\n    { path: 'tiles', loadChildren: './tools/tile-size/tile-size.module#TileSizeModule' },\n    { path: 'edittile/:_id', component: EditTileComponent, canActivate: [AuthGuard]},\n    { path: '', loadChildren: './auth/auth.module#AuthModule' },\n    { path: '**', redirectTo: '/' }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes, {preloadingStrategy: PreloadAllModules})\n  ],\n  declarations: [],\n  providers: [],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/app.routing.module.ts","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class AuthGuard {\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (!this.authService.isAuthenticated()) {\n      this.router.navigate(['/signin']);\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/auth/auth-guard.service.ts","import { Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n\n@Injectable()\nexport class AuthService {\n  private token: string;\n  private user: any;\n\n  constructor(private router: Router,\n              private httpClient: HttpClient) {}\n\n  setToken(token: string) {\n    this.token = token;\n  }\n\n  setUser(user: any) {\n    this.user = user;\n  }\n\n  getToken() {\n    return this.token;\n  }\n\n  getUser() {\n    return this.user;\n  }\n\n\n  signupUser(email: string, password: string) {\n    return this.httpClient.post('/users', {email: email, password: password}, { observe: 'response'});\n  }\n\n  signinUser(email: string, password: string) {\n    const result = true;\n    return this.httpClient.post('/users/login', {email: email, password: password}, { observe: 'response'});\n  }\n\n  logout() {\n    console.log('logout');\n    this.httpClient.delete('/users/logout', {\n            observe : 'response',\n            headers : new HttpHeaders().append('x-auth', this.token)\n          })\n      .subscribe(\n        (response) => {\n          this.token = null;\n          this.user = null;\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  }\n\n  getTokenFromServer() {\n\n    console.log('getToken token before DB: ', this.token);\n    this.httpClient.get('/users/me', {\n            observe : 'response',\n            headers : new HttpHeaders().append('x-auth', this.token)\n          })\n      .subscribe(\n        (response) => {\n          this.token = response.headers.get('x-auth');\n          this.user = response.body;\n          console.log('getToken : ', this.user);\n\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n      return this.token;\n  }\n\n  isAuthenticated() {\n    return this.token != null;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/auth/auth.service.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { SharedModule } from '../tools/shared/shared.module';\nimport { AppRoutingModule } from '../app.routing.module';\n\nimport { HeaderComponent } from './header/header.component';\nimport { HomeComponent } from './home/home.component';\n\n\nimport { TileSelectService } from '../tools/services/tile-select.service';\nimport { TileSizeService } from '../tools/services/tile-size.service';\nimport { DataStorageService } from '../tools/services/data-storage.service';\nimport { AuthService } from '../auth/auth.service';\n\n@NgModule({\n  declarations: [\n    HeaderComponent,\n    HomeComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    AppRoutingModule\n  ],\n  exports: [\n    HomeComponent,\n    HeaderComponent\n  ],\n  providers: [\n    TileSelectService,\n    TileSizeService,\n    DataStorageService,\n    AuthService,\n  ]\n})\nexport class CoreModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/core/core.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/core/header/header.component.css\n// module id = ../../../../../src/app/core/header/header.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-default\\\" role=\\\"navigation\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\" style=\\\"cursor: pointer\\\" >Learning Tiles App</a>\\n    </div>\\n\\n    <!-- Collect the nav links, forms, and other content for toggling -->\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbar\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li\\n          routerLinkActive=\\\"active\\\"\\n          [routerLinkActiveOptions]=\\\"{exact: true}\\\"\\n          style=\\\"cursor: pointer\\\">\\n            <a routerLink=\\\"/\\\">Home</a>\\n        </li>\\n        <li\\n          routerLinkActive=\\\"active\\\"\\n          style=\\\"cursor: pointer\\\">\\n            <a routerLink=\\\"/tiles/walldisplay\\\">Wall Design</a>\\n        </li>\\n        <li\\n          routerLinkActive=\\\"active\\\"\\n          style=\\\"cursor: pointer\\\">\\n            <a routerLink=\\\"/tiles/tilesstock\\\">Tiles Stock</a>\\n        </li>\\n        <li\\n          routerLinkActive=\\\"active\\\"\\n          style=\\\"cursor: pointer\\\">\\n            <a routerLink=\\\"/edittile/0\\\">Edit Tiles</a>\\n        </li>\\n      </ul>\\n\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li><a href=\\\"#\\\"></a></li>\\n        <ng-template [ngIf]=\\\"!isAuthenticated()\\\">\\n          <li><a style=\\\"cursor:pointer\\\" routerLink=\\\"/signup\\\">Register</a></li>\\n          <li><a style=\\\"cursor:pointer\\\" routerLink=\\\"/signin\\\">Login</a></li>\\n        </ng-template>\\n        <li><a style=\\\"cursor:pointer\\\" *ngIf=\\\"isAuthenticated()\\\" (click)=\\\"onlogOut()\\\" >Logout</a></li>\\n      </ul>\\n    </div><!-- /.navbar-collapse -->\\n  </div><!-- /.container-fluid -->\\n</nav>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/core/header/header.component.html\n// module id = ../../../../../src/app/core/header/header.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router} from '@angular/router';\nimport { AuthService } from '../../auth/auth.service';\nimport { TileSelectService } from '../../tools/services/tile-select.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private authService: AuthService,\n              private tileService: TileSelectService) { }\n\n  ngOnInit() {\n  }\n\n  onlogOut() {\n    this.tileService.resetTilesList();\n    this.authService.logout();\n    this.router.navigate(['/signin']);\n  }\n\n  isAuthenticated() {\n    return this.authService.isAuthenticated();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/core/header/header.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/core/home/home.component.css\n// module id = ../../../../../src/app/core/home/home.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-2\\\">\\n      <a style=\\\"cursor: pointer\\\"\\n      [routerLink]=\\\"['/walldisplay']\\\">\\n        Wall Design</a>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/core/home/home.component.html\n// module id = ../../../../../src/app/core/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/core/home/home.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/edit-tile/edit-tile.component.css\n// module id = ../../../../../src/app/edit-tile/edit-tile.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-4\\\">\\n    <form [formGroup] = \\\"tileForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div id=\\\"fileRequired\\\" [hidden]=\\\"!fileRequired\\\" class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n            Please select at least one file!\\n          </div>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-success\\\"\\n            [disabled] =\\\"!tileForm.valid\\\">\\n            {{ editMode ? 'Edit' : 'Add' }}\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onCancel()\\\">\\n            Cancel\\n          </button>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Name</label>\\n            <input\\n              type=\\\"text\\\"\\n              id=\\\"name\\\"\\n              formControlName=\\\"name\\\"\\n              class=\\\"form-control\\\">\\n              <input\\n                type=\\\"hidden\\\"\\n                id=\\\"_id\\\"\\n                formControlName=\\\"_id\\\"\\n                class=\\\"form-control\\\">\\n              <input\\n                type=\\\"hidden\\\"\\n                id=\\\"_userid\\\"\\n                formControlName=\\\"_userid\\\"\\n                class=\\\"form-control\\\">\\n              <input\\n                type=\\\"hidden\\\"\\n                id=\\\"path\\\"\\n                formControlName=\\\"path\\\"\\n                class=\\\"form-control\\\">\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\" *ngIf=\\\"!editMode\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"single\\\">Tile</label>\\n            <input type=\\\"file\\\" class=\\\"form-control\\\" name=\\\"single\\\" id=\\\"single\\\" ng2FileSelect [uploader]=\\\"uploader\\\" (click)=\\\"clearFileField($event)\\\"/>\\n          </div>\\n          <div id=\\\"maxSizeWarning\\\" [hidden]=\\\"!maxSizeWarning\\\" class=\\\"alert alert-warning\\\" role=\\\"alert\\\" >\\n            File size should not be less more then 300KB!\\n          </div>\\n          <div id=\\\"fileExtensionWarning\\\" [hidden]=\\\"!fileExtensionWarning\\\" class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n            You can only save the file as an PNG, JPG or GIF format!\\n          </div>\\n          <br />\\n          <!-- <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\"\\n            (click)=\\\"onUploadFile()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length \\\">\\n            <span class=\\\"glyphicon glyphicon-upload\\\"></span> Upload all\\n          </button><br /> -->\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"size\\\">Size</label>\\n            <select class=\\\"form-control\\\" name=\\\"size\\\"\\n              id=\\\"size\\\" formControlName=\\\"size\\\">\\n              <option\\n                *ngFor=\\\"let tileSize of tileSizes; let i = index;\\\"\\n                [value]= \\\"i\\\" >{{tileSize.name}}</option>\\n            </select>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"availability\\\">Availability</label>\\n            <div class=\\\"radio\\\">\\n              <label>\\n                <input type=\\\"radio\\\"\\n                  name=\\\"availability\\\"\\n                  formControlName=\\\"availability\\\"\\n                  value='Yes'>\\n                Yes\\n              </label>\\n            </div>\\n            <div class=\\\"radio\\\">\\n              <label>\\n                <input type=\\\"radio\\\"\\n                  name=\\\"availability\\\"\\n                  formControlName=\\\"availability\\\"\\n                  value='No'>\\n                No\\n              </label>\\n            </div>\\n            \\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"description\\\">Description</label>\\n            <textarea\\n              type=\\\"text\\\"\\n              id=\\\"description\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"description\\\"\\n              rows=\\\"4\\\"></textarea>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </form>\\n  </div>\\n  <div class=\\\"col-xs-4\\\" *ngIf=\\\"editMode\\\">\\n    <img\\n      [src]=\\\"tilesFolderPath + selectedTile.path\\\"\\n      alt=\\\"{{ selectedTile.name }}\\\"\\n      class=\\\"img-responsive\\\"\\n      style=\\\"max-height: 150px;\\\">\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/edit-tile/edit-tile.component.html\n// module id = ../../../../../src/app/edit-tile/edit-tile.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { FileUploader } from 'ng2-file-upload';\n\nimport { TileSelectService } from '../tools/services/tile-select.service';\nimport { TileSizeService } from '../tools/services/tile-size.service';\nimport { TileSize } from '../tools/shared/tile-size.model';\nimport { Tile } from '../tools/shared/tile.model';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-edit-tile',\n  templateUrl: './edit-tile.component.html',\n  styleUrls: ['./edit-tile.component.css']\n})\nexport class EditTileComponent implements OnInit {\n\n  tileForm: FormGroup;\n  tileSizes: TileSize[] ;\n  _id: string;\n  _userid: string;\n  editMode = false;\n  selectedTile: Tile;\n  fileExtensionWarning = false;\n  maxSizeWarning = false;\n  fileRequired = false;\n  tilesFolderPath = '';\n\n\n  public uploader: FileUploader  = new FileUploader({});  // --fs\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private tileSizeService: TileSizeService,\n              private tileService: TileSelectService,\n              private authService: AuthService ) {  }\n\n  ngOnInit() {\n      this.tileSizes = this.tileSizeService.getTilesSize();\n      this.tilesFolderPath = this.tileService.tilesFolderPath;\n      this.route.params\n      .subscribe(\n        (params: Params) => {\n          this._id = params['_id'];\n          this.editMode = params['_id'] !== '0';\n          const user = this.authService.getUser();\n          if (user && user._id) {\n            this._userid = user._id;\n          }\n          this.initForm();\n\n        }\n      );\n  }\n\n  private initForm() {\n\n    let tileName = '';\n    let tileSize = '';\n    let tileDescription = '';\n    let tileAvailability = 'Yes';\n    let tilepath = '';\n    if (this.editMode) {\n      // Get selected tile\n      this.selectedTile = this.tileService.getTileByID(this._id);\n      tileName = this.selectedTile.name;\n      tileSize = this.tileSizeService.getSizeIndexByDimension (this.selectedTile.width, this.selectedTile.height).toString();\n      tileDescription = this.selectedTile.description;\n      tileAvailability = this.selectedTile.availability;\n      tilepath = this.selectedTile.path;\n    }\n\n    this.tileForm = new FormGroup({\n      '_id': new FormControl(this._id, Validators.required),\n      'name': new FormControl(tileName, Validators.required),\n      'size': new FormControl(tileSize, Validators.required),\n      'description': new FormControl(tileDescription),\n      'availability': new FormControl(tileAvailability),\n      'path': new FormControl(tilepath),\n      '_userid': new FormControl(this._userid),\n    });\n  }\n\n  onCancel() {\n    this.router.navigate(['../../'], {relativeTo: this.route});\n  }\n\n  onSubmit() {\n\n    if (this.editMode) {\n      this.tileService.updateTile(this._id, this.tileForm.value);\n    } else {\n      this.onUploadFile();\n    }\n    this.onCancel();\n  }\n\n  onUploadFile() {\n\n    if (this.onUploadValidateFile()) {\n      // this.uploader.setOptions({url: 'http://localhost:3000/upload/' + this.tileForm.value.name});\n      this.uploader.setOptions({url: 'https://guarded-cove-17160.herokuapp.com/upload/' + this.tileForm.value.name});\n\n      this.uploader.uploadAll();\n      this.uploader.response.subscribe((res: any) => {\n        const res1 = JSON.parse(res);\n        if (res1) {\n          if (res1.error_code === 0) {\n            this.tileForm.value.path = res1.file_name;\n            // Store form values in table\n            this.tileService.addTile(this.tileForm.value);\n          } else {\n            alert('Error on Upload file: ' + res1.err_desc);\n          }\n\n        }\n        return res;\n      });\n    }\n\n  }\n\n  onUploadValidateFile() {\n    this.maxSizeWarning = false;\n    this.fileExtensionWarning = false;\n    const allowedExtensions = ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'svg'];\n    let fileExt = '';\n\n    if (this.uploader.getNotUploadedItems().length > 0) {\n\n      fileExt = this.uploader.queue[0].file.name.split('.').pop();\n      // Check the max size of file\n      if (this.uploader.queue[0].file.size > 300000) {\n        this.maxSizeWarning = true;\n      }\n      // Check the allowable file extension\n      const foundExt = allowedExtensions.find((ext: string) => {\n            return ext === fileExt.toLowerCase();\n          });\n      if (typeof(foundExt) === 'undefined' ) {\n          this.fileExtensionWarning = true;\n      }\n\n      if ( this.maxSizeWarning || this.fileExtensionWarning ) {\n        this.uploader.clearQueue();\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      this.fileRequired = true;\n      return false;\n    }\n\n  }\n\n  clearFileField(event) {\n    this.uploader.clearQueue();\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/edit-tile/edit-tile.component.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { AuthService } from '../../auth/auth.service';\r\n\r\n\r\nimport { Tile } from '../shared/tile.model';\r\n// import 'rxjs/Rx';\r\n\r\n@Injectable()\r\nexport class DataStorageService {\r\n  constructor(\r\n                private httpClient: HttpClient,\r\n                private authService: AuthService\r\n              ) {\r\n  }\r\n\r\n\r\n  storeTile(tile: Tile) {\r\n    const token = this.authService.getToken();\r\n    return this.httpClient.post('/api/tile?', tile, {\r\n      headers : new HttpHeaders().append('x-auth', token)\r\n    });\r\n  }\r\n\r\n  updateTileOnDB(_id: string, tile: Tile) {\r\n    const token = this.authService.getToken();\r\n    return this.httpClient.patch('/api/tile/' + _id, tile, {\r\n      headers : new HttpHeaders().append('x-auth', token)\r\n    });\r\n  }\r\n\r\n  getTilesListData() {\r\n    const token = this.authService.getToken();\r\n    return this.httpClient.get<Tile[]>('/api/tileslist?' , {\r\n      headers : new HttpHeaders().append('x-auth', token)\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/services/data-storage.service.ts","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Tile } from '../shared/tile.model';\r\nimport { TileSize } from '../shared/tile-size.model';\r\nimport { TileSizeService } from './tile-size.service';\r\nimport { DataStorageService } from './data-storage.service';\r\nimport { Response } from '@angular/http';\r\n\r\n\r\n@Injectable()\r\nexport class TileSelectService  {\r\n\r\n  // For informing the change in elected tile to others\r\n  selectedTileChanged = new Subject<{tile: Tile, rotatedByClass: string}>();\r\n  private tiles: Tile[] = [\r\n      // new Tile('1', 'image1_24X24', 12, 18, 'Gaurav/Learning/Tiles_Application/tiles-app-angular5/images/image1_24X24.jpg', '123'),\r\n        // new Tile('1', 'image1_24X24', 24, 24, 'test123-1517512691409.jpg', '123'),\r\n        // new Tile('1', 'image1_24X24', 24, 24, 'image1_24X24.jpg', '123', '1234', 'No'),\r\n        // new Tile('2', 'image2_24X24', 24, 24, 'image2_24X24'  + '.jpg', '123'),\r\n        // new Tile('3', 'image3_24X24', 24, 24,  'image3_24X24'  + '.jpg', '123'),\r\n        // new Tile('4', 'image4_24X24', 24, 24,  'image4_24X24'  + '.jpg', '123'),\r\n    ];\r\n\r\n  private selectedTile: Tile;\r\n  private selectedTiles: Tile[];\r\n  public tilesFolderPath =  '../../../../assets/uploads/';\r\n\r\n  constructor (private tileSizeService: TileSizeService,\r\n                private dataService: DataStorageService) {\r\n              }\r\n\r\n\r\n  // Get full list of available tiles\r\n  getAvailableTiles() {\r\n    return this.tiles.slice();\r\n  }\r\n\r\n  // Reset full list of available tiles\r\n  resetTilesList() {\r\n    this.tiles = [];\r\n  }\r\n\r\n  //  Get availabele tiles list based on size\r\n  getTilesBySize(width: number , height: number) {\r\n    this.selectedTiles = this.tiles.filter((tile: Tile) => {\r\n      if (tile.width === width && tile.height === height) {\r\n        return tile;\r\n      }\r\n    }).slice();\r\n    return this.selectedTiles;\r\n  }\r\n\r\n  // Set the currently selected tile and emit the change to inform others\r\n  setSelectedTile(tileSelected: Tile, classRotate: string = '0deg') {\r\n    this.selectedTile = tileSelected;\r\n    this.selectedTileChanged.next({tile: this.selectedTile, rotatedByClass: classRotate});\r\n\r\n  }\r\n\r\n  // Get the currently selected tile\r\n  getSelectedTile() {\r\n    return this.selectedTile;\r\n  }\r\n\r\n  //  Get tiles by ID\r\n  getTileByID ( _id: string) {\r\n    return this.tiles.find((tile) => {\r\n      return tile._id === _id;\r\n    });\r\n  }\r\n\r\n\r\n  fetchTilesListFromDatabase() {\r\n    this.dataService.getTilesListData()\r\n    .subscribe(\r\n      (tilesList) => {\r\n        this.tiles = tilesList;\r\n      }\r\n    );\r\n\r\n  }\r\n  // Create a Tile Object for Saving and updating tile\r\n  createTileObject(tileDetails: { _id: string,\r\n                        name: string,\r\n                        size: string,\r\n                        description: string,\r\n                        availability: string,\r\n                        path: string,\r\n                        _userid: string }) {\r\n    const tilesize: TileSize = this.tileSizeService.getTilesSizeById(+tileDetails.size);\r\n    const tile: Tile = new Tile( tileDetails._id,\r\n                                  tileDetails.name,\r\n                                  tilesize.width,\r\n                                  tilesize.height,\r\n                                  tileDetails.path,\r\n                                  tileDetails._userid,\r\n                                  tileDetails.description,\r\n                                  tileDetails.availability\r\n                                );\r\n    return tile;\r\n  }\r\n\r\n  // Add New tile details\r\n  addTile(tileDetails: { _id: string,\r\n                        name: string,\r\n                        size: string,\r\n                        description: string,\r\n                        availability: string,\r\n                        path: string,\r\n                        _userid: string }) {\r\n    const tile: Tile = this.createTileObject(tileDetails);\r\n    //  Published the changes\r\n    this.dataService.storeTile(tile)\r\n      .subscribe(\r\n        (tile1: Tile) => {\r\n          console.log(tile1);\r\n          // Add the new Tile in the list\r\n          this.tiles.push(tile1);\r\n          console.log(this.tiles);\r\n        }\r\n      );\r\n  }\r\n\r\n  updateTile(_id: string, tileDetails: { _id: string,\r\n                        name: string,\r\n                        size: string,\r\n                        description: string,\r\n                        availability: string,\r\n                        path: string,\r\n                        _userid: string }) {\r\n    const tile: Tile = this.createTileObject(tileDetails);\r\n    const index: number =  this.tiles.findIndex((this_tile: Tile) => {\r\n                              return this_tile._id === _id;\r\n                            });\r\n    // Updated the new Tile in the list\r\n    this.tiles[index] = tile;\r\n\r\n    this.dataService.updateTileOnDB(_id, tile)\r\n      .subscribe(\r\n        (updatedTile: {tile: Tile}) => {\r\n          console.log('updateTileOnDB', updatedTile);\r\n          this.tiles[index] = updatedTile.tile;\r\n          // Update the Tile in the list\r\n          console.log(this.tiles);\r\n        }\r\n      );\r\n    // //  Published the changes\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/services/tile-select.service.ts","import { TileSize } from '../shared/tile-size.model';\r\n\r\nexport class TileSizeService  {\r\n\r\n  private wallWidth = 600;\r\n  private wallHeight = 600;\r\n  private tileSizes: TileSize[] = [\r\n    new TileSize ('24 X 24', 24,  24),\r\n    new TileSize ('12 X 18', 12,  18),\r\n    new TileSize ('18 X 12', 18,  12),\r\n    new TileSize ('12 X 12', 12,  12),\r\n    new TileSize ('10 X 15', 10,  15),\r\n    new TileSize ('10 X 13', 10,  13),\r\n    new TileSize ('12 X 8', 12,  8),\r\n  ];\r\n\r\n  constructor () { }\r\n\r\n  // Get full list of available tiles size\r\n  getTilesSize() {\r\n    return this.tileSizes.slice();\r\n  }\r\n\r\n  //  Get availabele tiles size by ID\r\n  getTilesSizeById(id: number) {\r\n    return this.tileSizes[id];\r\n  }\r\n\r\n  //  Get tiles size Index by Dimension\r\n  getSizeIndexByDimension ( width: number, height: number) {\r\n    return this.tileSizes.findIndex((size) => {\r\n      return size.height === height && size.width === width;\r\n    });\r\n  }\r\n\r\n  // Get Wall  size\r\n  getWallSize() {\r\n    return {'wallWidth': this.wallWidth, 'wallHeight' : this.wallHeight};\r\n  }\r\n  // Set Wall size\r\n  setWallSize(wallWidth: number, wallHeight: number) {\r\n    this.wallWidth = wallWidth * 60;\r\n    this.wallHeight = wallHeight * 60;\r\n  }\r\n\r\n  getRowWidth(originalWidth: number) {\r\n    return (originalWidth * 5);\r\n  }\r\n\r\n  getRowHeight(originalHeight: number) {\r\n    return (originalHeight * 5);\r\n  }\r\n\r\n  getRowCount(originalHeight: number) {\r\n    return  (this.wallHeight / (this.getRowHeight(originalHeight)));\r\n  }\r\n\r\n  getColumnCount(originalWidth: number) {\r\n    return  (this.wallWidth / (this.getRowWidth(originalWidth)));\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/services/tile-size.service.ts","import { Directive, OnInit, OnDestroy, Renderer2, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { TileSelectService } from '../services/tile-select.service';\nimport { Tile } from '../shared/tile.model';\n\n@Directive({\n  selector: '[appDisplaySelectedTile]'\n})\nexport class DisplaySelectedTileDirective implements OnInit, OnDestroy {\n\n  selectedTile: Tile;\n  rotatedByClass: string;\n  spanHeight: number;\n  spanWidth: number;\n  transform_origin: string;\n  tilesFolderPath = '';\n\n  tileChangedSubscription: Subscription;\n\n  constructor(private elRef: ElementRef,\n                private renderer: Renderer2,\n                private tileService: TileSelectService ) { }\n\n  ngOnInit() {\n    this.selectedTile = this.tileService.getSelectedTile();\n    this.tilesFolderPath = this.tileService.tilesFolderPath;\n    this.tileChangedSubscription = this.tileService.selectedTileChanged\n      .subscribe(\n        (tileUpdate: {tile: Tile, rotatedByClass: string}) => {\n          this.selectedTile = tileUpdate.tile;\n          this.rotatedByClass = tileUpdate.rotatedByClass;\n        }\n      );\n  }\n\n  // set the background for tile\n  @HostListener('click') changeTile() {\n    this.spanHeight = this.elRef.nativeElement.clientHeight;\n    this.spanWidth = this.elRef.nativeElement.clientWidth;\n\n    if (this.selectedTile) {\n      this.renderer.setAttribute(this.elRef.nativeElement.children[0], 'src', this.tilesFolderPath + this.selectedTile.path);\n      this.renderer.setStyle(this.elRef.nativeElement.children[0], 'transform', 'rotate(' + this.rotatedByClass + ')');\n      this.setTranformOriginStyle(this.elRef.nativeElement.children[0], this.spanWidth, this.spanHeight);\n\n    }\n  }\n\n  // set the background for complete row\n  @HostListener('dblclick') changeTiles() {\n    if (this.selectedTile) {\n\n      const tilesInRow: NodeListOf<HTMLImageElement> = (<HTMLElement>this.renderer\n                              .parentNode(this.elRef.nativeElement)).querySelectorAll('img');\n      for (let   i = 0; i < tilesInRow.length; i++) {\n        tilesInRow[i].setAttribute('src', this.tilesFolderPath + this.selectedTile.path);\n        tilesInRow[i].style.transform = 'rotate(' + this.rotatedByClass + ')';\n        this.setTranformOriginStyle(tilesInRow[i], this.spanWidth, this.spanHeight);\n      }\n    }\n  }\n\n  setTranformOriginStyle(imgElement: any, width: number, height: number) {\n    if (this.rotatedByClass === '0deg' || this.rotatedByClass === '180deg') {\n\n      this.renderer.removeStyle(imgElement, 'transform-origin');\n\n    } else if (this.rotatedByClass === '90deg') {\n\n      this.transform_origin = width / 2 + 'px ' + width / 2 + 'px';\n      this.renderer.setStyle(imgElement, 'transform-origin', this.transform_origin);\n\n    } else if (this.rotatedByClass === '270deg') {\n\n      this.transform_origin = height / 2 + 'px ' + height / 2 + 'px';\n      this.renderer.setStyle(imgElement, 'transform-origin', this.transform_origin);\n\n    }\n\n\n  }\n\n  ngOnDestroy() {\n    this.tileChangedSubscription.unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/shared/display-selected-tile.directive.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'numToArray'\n})\nexport class NumToArrayPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    const res = [];\n    for (let i = 0; i < value; i++) {\n         res.push(i);\n       }\n       return res;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/shared/num-to-array.pipe.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NumToArrayPipe } from './num-to-array.pipe';\nimport { DisplaySelectedTileDirective } from './display-selected-tile.directive';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    NumToArrayPipe,\n    DisplaySelectedTileDirective\n  ],\n  providers: [],\n  exports: [\n    NumToArrayPipe,\n    DisplaySelectedTileDirective\n  ]\n})\nexport class SharedModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/shared/shared.module.ts","export class TileSize {\r\n  constructor(public name:string, public width: number, public height: number) {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/shared/tile-size.model.ts","export class Tile {\r\n  constructor(\r\n                public _id: string,\r\n                public name: string,\r\n                public width: number,\r\n                public height: number,\r\n                public path: string,\r\n                public _userid: string,\r\n                public description: string = '',\r\n                public availability: string = 'Yes'\r\n              ) {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/app/tools/shared/tile.model.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Gaurav/Learning/Tiles_Application/tiles-app-angular5/src/main.ts"],"sourceRoot":"webpack:///"}